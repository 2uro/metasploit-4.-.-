.\\" auto-generated by docbook2man-spec $Revision: 1.1.1.1 $
.TH "PG_DUMP" "1" "2009-06-27" "Application" "PostgreSQL Client Applications"
.SH NAME
pg_dump \- extract a PostgreSQL database into a script file or other archive file

.SH SYNOPSIS
.sp
\fBpg_dump\fR [ \fB\fIoption\fB\fR\fI...\fR ]  [ \fB\fIdbname\fB\fR ] 
.SH "DESCRIPTION"
.PP
\fBpg_dump\fR is a utility for backing up a
PostgreSQL database. It makes consistent
backups even if the database is being used concurrently.
\fBpg_dump\fR does not block other users
accessing the database (readers or writers).
.PP
Dumps can be output in script or archive file formats. Script
dumps are plain-text files containing the SQL commands required
to reconstruct the database to the state it was in at the time it was
saved. To restore from such a script, feed it to \fBpsql\fR(1). Script files
can be used to reconstruct the database even on other machines and
other architectures; with some modifications even on other SQL
database products.
.PP
The alternative archive file formats must be used with
\fBpg_restore\fR(1) to rebuild the database. They
allow \fBpg_restore\fR to be selective about
what is restored, or even to reorder the items prior to being
restored.
The archive file formats are designed to be portable across
architectures.
.PP
When used with one of the archive file formats and combined with
\fBpg_restore\fR,
\fBpg_dump\fR provides a flexible archival and
transfer mechanism. \fBpg_dump\fR can be used to
backup an entire database, then \fBpg_restore\fR
can be used to examine the archive and/or select which parts of the
database are to be restored. The most flexible output file format is
the ``custom'' format (\fB-Fc\fR). It allows
for selection and reordering of all archived items, and is compressed
by default. The \fBtar\fR format
(\fB-Ft\fR) is not compressed and it is not possible to
reorder data when loading, but it is otherwise quite flexible;
moreover, it can be manipulated with standard Unix tools such as
\fBtar\fR.
.PP
While running \fBpg_dump\fR, one should examine the
output for any warnings (printed on standard error), especially in
light of the limitations listed below.
.SH "OPTIONS"
.PP
The following command-line options control the content and
format of the output.
.TP
\fB\fIdbname\fB\fR
Specifies the name of the database to be dumped. If this is
not specified, the environment variable
\fBPGDATABASE\fR is used. If that is not set, the
user name specified for the connection is used.
.TP
\fB-a\fR
.TP
\fB--data-only\fR
Dump only the data, not the schema (data definitions).

This option is only meaningful for the plain-text format. For
the archive formats, you can specify the option when you
call \fBpg_restore\fR.
.TP
\fB-b\fR
.TP
\fB--blobs\fR
Include large objects in the dump. This is the default behavior
except when \fB--schema\fR, \fB--table\fR, or
\fB--schema-only\fR is specified, so the \fB-b\fR
switch is only useful to add large objects to selective dumps.
.TP
\fB-c\fR
.TP
\fB--clean\fR
Output commands to clean (drop)
database objects prior to (the commands for) creating them.

This option is only meaningful for the plain-text format. For
the archive formats, you can specify the option when you
call \fBpg_restore\fR.
.TP
\fB-C\fR
.TP
\fB--create\fR
Begin the output with a command to create the
database itself and reconnect to the created database. (With a
script of this form, it doesn't matter which database you connect
to before running the script.)

This option is only meaningful for the plain-text format. For
the archive formats, you can specify the option when you
call \fBpg_restore\fR.
.TP
\fB-E \fIencoding\fB\fR
.TP
\fB--encoding=\fIencoding\fB\fR
Create the dump in the specified character set encoding. By default,
the dump is created in the database encoding. (Another way to get the
same result is to set the \fBPGCLIENTENCODING\fR environment
variable to the desired dump encoding.)
.TP
\fB-f \fIfile\fB\fR
.TP
\fB--file=\fIfile\fB\fR
Send output to the specified file. If this is omitted, the
standard output is used.
.TP
\fB-F \fIformat\fB\fR
.TP
\fB--format=\fIformat\fB\fR
Selects the format of the output.
\fIformat\fR can be one of the following:
.RS
.TP
\fBp\fR
.TP
\fBplain\fR
Output a plain-text SQL script file (the default).
.TP
\fBc\fR
.TP
\fBcustom\fR
Output a custom archive suitable for input into
\fBpg_restore\fR. This is the most flexible
format in that it allows reordering of loading data as well
as object definitions. This format is also compressed by default.
.TP
\fBt\fR
.TP
\fBtar\fR
Output a \fBtar\fR archive suitable for input into
\fBpg_restore\fR. Using this archive format
allows reordering and/or exclusion of database objects
at the time the database is restored. It is also possible to limit
which data is reloaded at restore time.
.RE
.PP
.TP
\fB-i\fR
.TP
\fB--ignore-version\fR
A deprecated option that is now ignored.
.TP
\fB-n \fIschema\fB\fR
.TP
\fB--schema=\fIschema\fB\fR
Dump only schemas matching \fIschema\fR; this selects both the
schema itself, and all its contained objects. When this option is
not specified, all non-system schemas in the target database will be
dumped. Multiple schemas can be
selected by writing multiple \fB-n\fR switches. Also, the
\fIschema\fR parameter is
interpreted as a pattern according to the same rules used by
\fBpsql\fR's \\d commands (see Patterns [\fBpsql\fR(1)]),
so multiple schemas can also be selected by writing wildcard characters
in the pattern. When using wildcards, be careful to quote the pattern
if needed to prevent the shell from expanding the wildcards.
.sp
.RS
.B "Note:"
When \fB-n\fR is specified, \fBpg_dump\fR
makes no attempt to dump any other database objects that the selected
schema(s) might depend upon. Therefore, there is no guarantee
that the results of a specific-schema dump can be successfully
restored by themselves into a clean database.
.RE
.sp
.sp
.RS
.B "Note:"
Non-schema objects such as blobs are not dumped when \fB-n\fR is
specified. You can add blobs back to the dump with the
\fB--blobs\fR switch.
.RE
.sp
.TP
\fB-N \fIschema\fB\fR
.TP
\fB--exclude-schema=\fIschema\fB\fR
Do not dump any schemas matching the \fIschema\fR pattern. The pattern is
interpreted according to the same rules as for \fB-n\fR.
\fB-N\fR can be given more than once to exclude schemas
matching any of several patterns.

When both \fB-n\fR and \fB-N\fR are given, the behavior
is to dump just the schemas that match at least one \fB-n\fR
switch but no \fB-N\fR switches. If \fB-N\fR appears
without \fB-n\fR, then schemas matching \fB-N\fR are
excluded from what is otherwise a normal dump.
.TP
\fB-o\fR
.TP
\fB--oids\fR
Dump object identifiers (OIDs) as part of the
data for every table. Use this option if your application references
the OID
columns in some way (e.g., in a foreign key constraint).
Otherwise, this option should not be used.
.TP
\fB-O\fR
.TP
\fB--no-owner\fR
Do not output commands to set
ownership of objects to match the original database.
By default, \fBpg_dump\fR issues
\fBALTER OWNER\fR or
\fBSET SESSION AUTHORIZATION\fR
statements to set ownership of created database objects.
These statements
will fail when the script is run unless it is started by a superuser
(or the same user that owns all of the objects in the script).
To make a script that can be restored by any user, but will give
that user ownership of all the objects, specify \fB-O\fR.

This option is only meaningful for the plain-text format. For
the archive formats, you can specify the option when you
call \fBpg_restore\fR.
.TP
\fB-R\fR
.TP
\fB--no-reconnect\fR
This option is obsolete but still accepted for backwards
compatibility.
.TP
\fB-s\fR
.TP
\fB--schema-only\fR
Dump only the object definitions (schema), not data.
.TP
\fB-S \fIusername\fB\fR
.TP
\fB--superuser=\fIusername\fB\fR
Specify the superuser user name to use when disabling triggers.
This is only relevant if \fB--disable-triggers\fR is used.
(Usually, it's better to leave this out, and instead start the
resulting script as superuser.)
.TP
\fB-t \fItable\fB\fR
.TP
\fB--table=\fItable\fB\fR
Dump only tables (or views or sequences) matching \fItable\fR. Multiple tables can be
selected by writing multiple \fB-t\fR switches. Also, the
\fItable\fR parameter is
interpreted as a pattern according to the same rules used by
\fBpsql\fR's \\d commands (see Patterns [\fBpsql\fR(1)]),
so multiple tables can also be selected by writing wildcard characters
in the pattern. When using wildcards, be careful to quote the pattern
if needed to prevent the shell from expanding the wildcards.

The \fB-n\fR and \fB-N\fR switches have no effect when
\fB-t\fR is used, because tables selected by \fB-t\fR will
be dumped regardless of those switches, and non-table objects will not
be dumped.
.sp
.RS
.B "Note:"
When \fB-t\fR is specified, \fBpg_dump\fR
makes no attempt to dump any other database objects that the selected
table(s) might depend upon. Therefore, there is no guarantee
that the results of a specific-table dump can be successfully
restored by themselves into a clean database.
.RE
.sp
.sp
.RS
.B "Note:"
The behavior of the \fB-t\fR switch is not entirely upward
compatible with pre-8.2 PostgreSQL
versions. Formerly, writing -t tab would dump all
tables named tab, but now it just dumps whichever one
is visible in your default search path. To get the old behavior
you can write -t '*.tab'. Also, you must write something
like -t sch.tab to select a table in a particular schema,
rather than the old locution of -n sch -t tab.
.RE
.sp
.TP
\fB-T \fItable\fB\fR
.TP
\fB--exclude-table=\fItable\fB\fR
Do not dump any tables matching the \fItable\fR pattern. The pattern is
interpreted according to the same rules as for \fB-t\fR.
\fB-T\fR can be given more than once to exclude tables
matching any of several patterns.

When both \fB-t\fR and \fB-T\fR are given, the behavior
is to dump just the tables that match at least one \fB-t\fR
switch but no \fB-T\fR switches. If \fB-T\fR appears
without \fB-t\fR, then tables matching \fB-T\fR are
excluded from what is otherwise a normal dump.
.TP
\fB-v\fR
.TP
\fB--verbose\fR
Specifies verbose mode. This will cause
\fBpg_dump\fR to output detailed object
comments and start/stop times to the dump file, and progress
messages to standard error.
.TP
\fB-x\fR
.TP
\fB--no-privileges\fR
.TP
\fB--no-acl\fR
Prevent dumping of access privileges (grant/revoke commands).
.TP
\fB-Z \fI0..9\fB\fR
.TP
\fB--compress=\fI0..9\fB\fR
Specify the compression level to use. Zero means no compression.
For the custom archive format, this specifies compression of
individual table-data segments, and the default is to compress
at a moderate level.
For plain text output, setting a nonzero compression level causes
the entire output file to be compressed, as though it had been
fed through \fBgzip\fR; but the default is not to compress.
The tar archive format currently does not support compression at all.
.TP
\fB--binary-upgrade\fR
This option is for use by in-place upgrade utilities. Its use
for other purposes is not recommended or supported. The
behavior of the option may change in future releases without
notice.
.TP
\fB--inserts\fR
Dump data as \fBINSERT\fR commands (rather
than \fBCOPY\fR). This will make restoration very slow;
it is mainly useful for making dumps that can be loaded into
non-PostgreSQL databases.
Also, since this option generates a separate command for each row,
an error in reloading a row causes only that row to be lost rather
than the entire table contents.
Note that
the restore might fail altogether if you have rearranged column order.
The \fB--column-inserts\fR option is safe against column
order changes, though even slower.
.TP
\fB--column-inserts\fR
.TP
\fB--attribute-inserts\fR
Dump data as \fBINSERT\fR commands with explicit
column names (INSERT INTO
\fItable\fR
(\fIcolumn\fR, ...) VALUES
\&...). This will make restoration very slow; it is mainly
useful for making dumps that can be loaded into
non-PostgreSQL databases.
Also, since this option generates a separate command for each row,
an error in reloading a row causes only that row to be lost rather
than the entire table contents.
.TP
\fB--disable-dollar-quoting\fR
This option disables the use of dollar quoting for function bodies,
and forces them to be quoted using SQL standard string syntax.
.TP
\fB--disable-triggers\fR
This option is only relevant when creating a data-only dump.
It instructs \fBpg_dump\fR to include commands
to temporarily disable triggers on the target tables while
the data is reloaded. Use this if you have referential
integrity checks or other triggers on the tables that you
do not want to invoke during data reload.

Presently, the commands emitted for \fB--disable-triggers\fR
must be done as superuser. So, you should also specify
a superuser name with \fB-S\fR, or preferably be careful to
start the resulting script as a superuser.

This option is only meaningful for the plain-text format. For
the archive formats, you can specify the option when you
call \fBpg_restore\fR.
.TP
\fB--lock-wait-timeout=\fItimeout\fB\fR
Do not wait forever to acquire shared table locks at the beginning of
the dump. Instead fail if unable to lock a table within the specified
\fItimeout\fR. The timeout may be
specified in any of the formats accepted by \fBSET
statement_timeout\fR. (Allowed values vary depending on the server
version you are dumping from, but an integer number of milliseconds
is accepted by all versions since 7.3. This option is ignored when
dumping from a pre-7.3 server.)
.TP
\fB--no-tablespaces\fR
Do not output commands to select tablespaces.
With this option, all objects will be created in whichever
tablespace is the default during restore.

This option is only meaningful for the plain-text format. For
the archive formats, you can specify the option when you
call \fBpg_restore\fR.
.TP
\fB--use-set-session-authorization\fR
Output SQL-standard \fBSET SESSION AUTHORIZATION\fR commands
instead of \fBALTER OWNER\fR commands to determine object
ownership. This makes the dump more standards compatible, but
depending on the history of the objects in the dump, might not restore
properly. Also, a dump using \fBSET SESSION AUTHORIZATION\fR
will certainly require superuser privileges to restore correctly,
whereas \fBALTER OWNER\fR requires lesser privileges.
.PP
.PP
The following command-line options control the database connection parameters.
.TP
\fB-h \fIhost\fB\fR
.TP
\fB--host=\fIhost\fB\fR
Specifies the host name of the machine on which the server is
running. If the value begins with a slash, it is used as the
directory for the Unix domain socket. The default is taken
from the \fBPGHOST\fR environment variable, if set,
else a Unix domain socket connection is attempted.
.TP
\fB-p \fIport\fB\fR
.TP
\fB--port=\fIport\fB\fR
Specifies the TCP port or local Unix domain socket file
extension on which the server is listening for connections.
Defaults to the \fBPGPORT\fR environment variable, if
set, or a compiled-in default.
.TP
\fB-U \fIusername\fB\fR
.TP
\fB--username=\fIusername\fB\fR
User name to connect as.
.TP
\fB-w\fR
.TP
\fB--no-password\fR
Never issue a password prompt. If the server requires
password authentication and a password is not available by
other means such as a \fI.pgpass\fR file, the
connection attempt will fail. This option can be useful in
batch jobs and scripts where no user is present to enter a
password.
.TP
\fB-W\fR
.TP
\fB--password\fR
Force \fBpg_dump\fR to prompt for a
password before connecting to a database.

This option is never essential, since
\fBpg_dump\fR will automatically prompt
for a password if the server demands password authentication.
However, \fBpg_dump\fR will waste a
connection attempt finding out that the server wants a password.
In some cases it is worth typing \fB-W\fR to avoid the extra
connection attempt.
.TP
\fB--role=\fIrolename\fB\fR
Specifies a role name to be used to create the dump.
This option causes \fBpg_dump\fR to issue a
\fBSET ROLE\fR \fIrolename\fR
command after connecting to the database. It is useful when the
authenticated user (specified by \fB-U\fR) lacks privileges
needed by \fBpg_dump\fR, but can switch to a role with
the required rights. Some installations have a policy against
logging in directly as a superuser, and use of this option allows
dumps to be made without violating the policy.
.PP
.SH "ENVIRONMENT"
.TP
\fBPGDATABASE\fR
.TP
\fBPGHOST\fR
.TP
\fBPGOPTIONS\fR
.TP
\fBPGPORT\fR
.TP
\fBPGUSER\fR
Default connection parameters.
.PP
This utility, like most other PostgreSQL utilities,
also uses the environment variables supported by \fBlibpq\fR
(see in the documentation).
.PP
.SH "DIAGNOSTICS"
.PP
\fBpg_dump\fR internally executes
\fBSELECT\fR statements. If you have problems running
\fBpg_dump\fR, make sure you are able to
select information from the database using, for example, \fBpsql\fR(1). Also, any default connection settings and environment
variables used by the \fBlibpq\fR front-end
library will apply.
.PP
The database activity of \fBpg_dump\fR is
normally collected by the statistics collector. If this is
undesirable, you can set parameter track_counts
to false via \fBPGOPTIONS\fR or the ALTER
USER command.
.SH "NOTES"
.PP
If your database cluster has any local additions to the template1 database,
be careful to restore the output of \fBpg_dump\fR into a
truly empty database; otherwise you are likely to get errors due to
duplicate definitions of the added objects. To make an empty database
without any local additions, copy from template0 not template1,
for example:
.sp
.nf
CREATE DATABASE foo WITH TEMPLATE template0;
.sp
.fi
.PP
When a data-only dump is chosen and the option \fB--disable-triggers\fR
is used, \fBpg_dump\fR emits commands
to disable triggers on user tables before inserting the data,
and then commands to re-enable them after the data has been
inserted. If the restore is stopped in the middle, the system
catalogs might be left in the wrong state.
.PP
Members of tar archives are limited to a size less than 8 GB.
(This is an inherent limitation of the tar file format.) Therefore
this format cannot be used if the textual representation of any one table
exceeds that size. The total size of a tar archive and any of the
other output formats is not limited, except possibly by the
operating system.
.PP
The dump file produced by \fBpg_dump\fR
does not contain the statistics used by the optimizer to make
query planning decisions. Therefore, it is wise to run
\fBANALYZE\fR after restoring from a dump file
to ensure good performance. The dump file also does not
contain any \fBALTER DATABASE ... SET\fR commands;
these settings are dumped by \fBpg_dumpall\fR(1),
along with database users and other installation-wide settings.
.PP
Because \fBpg_dump\fR is used to transfer data
to newer versions of PostgreSQL, the output of
\fBpg_dump\fR can be expected to load into
PostgreSQL server versions newer than
\fBpg_dump\fR's version. \fBpg_dump\fR can also
dump from PostgreSQL servers older than its own version.
(Currently, servers back to version 7.0 are supported.)
However, \fBpg_dump\fR cannot dump from
PostgreSQL servers newer than its own major version;
it will refuse to even try, rather than risk making an invalid dump.
Also, it is not guaranteed that \fBpg_dump\fR's output can
be loaded into a server of an older major version \(em not even if the
dump was taken from a server of that version. Loading a dump file
into an older server may require manual editing of the dump file
to remove syntax not understood by the older server.
.SH "EXAMPLES"
.PP
To dump a database called mydb into a SQL-script file:
.sp
.nf
$ \fBpg_dump mydb > db.sql\fR
.sp
.fi
.PP
To reload such a script into a (freshly created) database named
newdb:
.sp
.nf
$ \fBpsql -d newdb -f db.sql\fR
.sp
.fi
.PP
To dump a database into a custom-format archive file:
.sp
.nf
$ \fBpg_dump -Fc mydb > db.dump\fR
.sp
.fi
.PP
To reload an archive file into a (freshly created) database named
newdb:
.sp
.nf
$ \fBpg_restore -d newdb db.dump\fR
.sp
.fi
.PP
To dump a single table named mytab:
.sp
.nf
$ \fBpg_dump -t mytab mydb > db.sql\fR
.sp
.fi
.PP
To dump all tables whose names start with emp in the
detroit schema, except for the table named
employee_log:
.sp
.nf
$ \fBpg_dump -t 'detroit.emp*' -T detroit.employee_log mydb > db.sql\fR
.sp
.fi
.PP
To dump all schemas whose names start with east or
west and end in gsm, excluding any schemas whose
names contain the word test:
.sp
.nf
$ \fBpg_dump -n 'east*gsm' -n 'west*gsm' -N '*test*' mydb > db.sql\fR
.sp
.fi
.PP
The same, using regular expression notation to consolidate the switches:
.sp
.nf
$ \fBpg_dump -n '(east|west)*gsm' -N '*test*' mydb > db.sql\fR
.sp
.fi
.PP
To dump all database objects except for tables whose names begin with
ts_:
.sp
.nf
$ \fBpg_dump -T 'ts_*' mydb > db.sql\fR
.sp
.fi
.PP
To specify an upper-case or mixed-case name in \fB-t\fR and related
switches, you need to double-quote the name; else it will be folded to
lower case (see Patterns [\fBpsql\fR(1)]). But
double quotes are special to the shell, so in turn they must be quoted.
Thus, to dump a single table with a mixed-case name, you need something
like
.sp
.nf
$ \fBpg_dump -t '"MixedCaseName"' mydb > mytab.sql\fR
.sp
.fi
.SH "SEE ALSO"
\fBpg_dumpall\fR(1), \fBpg_restore\fR(1), \fBpsql\fR(1)
