.\\" auto-generated by docbook2man-spec $Revision: 1.1.1.1 $
.TH "INITDB" "1" "2009-06-27" "Application" "PostgreSQL Server Applications"
.SH NAME
initdb \- create a new PostgreSQL database cluster

.SH SYNOPSIS
.sp
\fBinitdb\fR [ \fB\fIoption\fB\fR\fI...\fR ]  \fB [ --pgdata  ]  [ -D  ] \fIdirectory\fB\fR
.SH "DESCRIPTION"
.PP
\fBinitdb\fR creates a new
PostgreSQL database cluster. A database
cluster is a collection of databases that are managed by a single
server instance.
.PP
Creating a database cluster consists of creating the directories in
which the database data will live, generating the shared catalog
tables (tables that belong to the whole cluster rather than to any
particular database), and creating the template1
and postgres databases. When you later create a 
new database, everything in the template1 database is 
copied. (Therefore, anything installed in template1
is automatically copied into each database created later.)
The postgres database is a default database meant
for use by users, utilities and third party applications.
.PP
Although \fBinitdb\fR will attempt to create the
specified data directory, it might not have permission if the parent
directory of the desired data directory is root-owned. To initialize
in such a setup, create an empty data directory as root, then use
\fBchown\fR to assign ownership of that directory to the
database user account, then \fBsu\fR to become the
database user to run \fBinitdb\fR.
.PP
\fBinitdb\fR must be run as the user that will own the
server process, because the server needs to have access to the
files and directories that \fBinitdb\fR creates.
Since the server cannot be run as root, you must not run
\fBinitdb\fR as root either. (It will in fact refuse
to do so.)
.PP
\fBinitdb\fR initializes the database cluster's default
locale and character set encoding. The character set encoding,
collation order (LC_COLLATE) and character set classes
(LC_CTYPE, e.g. upper, lower, digit) can be set separately
for a database when it is created. \fBinitdb\fR determines
those settings for the template1 database, which will
serve as the default for all other databases.
.PP
To alter the default collation order or character set classes, use the
\fB--lc-collate\fR and \fB--lc-ctype\fR options.
Collation orders other than C or POSIX also have
a performance penalty. For these reasons it is important to choose the
right locale when running \fBinitdb\fR. 
.PP
The remaining locale categories can be changed later when the server
is started. You can also use \fB--locale\fR to set the
default for all locale categories, including collation order and
character set classes. All server locale values (lc_*) can
be displayed via \fBSHOW ALL\fR.
More details can be found in in the documentation.
.PP
To alter the default encoding, use the \fB--encoding\fR.
More details can be found in in the documentation.
.SH "OPTIONS"
.PP
.TP
\fB-A \fIauthmethod\fB\fR
.TP
\fB--auth=\fIauthmethod\fB\fR
This option specifies the authentication method for local users
used in \fIpg_hba.conf\fR. Do not use trust
unless you trust all local users on your system. Trust 
is the default for ease of installation.
.TP
\fB-D \fIdirectory\fB\fR
.TP
\fB--pgdata=\fIdirectory\fB\fR
This option specifies the directory where the database cluster
should be stored. This is the only information required by
\fBinitdb\fR, but you can avoid writing it by
setting the \fBPGDATA\fR environment variable, which
can be convenient since the database server
(\fBpostgres\fR) can find the database
directory later by the same variable.
.TP
\fB-E \fIencoding\fB\fR
.TP
\fB--encoding=\fIencoding\fB\fR
Selects the encoding of the template database. This will also
be the default encoding of any database you create later,
unless you override it there. The default is derived from the locale, or
SQL_ASCII if that does not work. The character sets supported by
the PostgreSQL server are described
in in the documentation.
.TP
\fB--locale=\fIlocale\fB\fR
Sets the default locale for the database cluster. If this
option is not specified, the locale is inherited from the
environment that \fBinitdb\fR runs in. Locale
support is described in in the documentation.
.TP
\fB--lc-collate=\fIlocale\fB\fR
.TP
\fB--lc-ctype=\fIlocale\fB\fR
.TP
\fB--lc-messages=\fIlocale\fB\fR
.TP
\fB--lc-monetary=\fIlocale\fB\fR
.TP
\fB--lc-numeric=\fIlocale\fB\fR
.TP
\fB--lc-time=\fIlocale\fB\fR
Like \fB--locale\fR, but only sets the locale in
the specified category.
.TP
\fB-X \fIdirectory\fB\fR
.TP
\fB--xlogdir=\fIdirectory\fB\fR
This option specifies the directory where the transaction log
should be stored.
.TP
\fB-U \fIusername\fB\fR
.TP
\fB--username=\fIusername\fB\fR
Selects the user name of the database superuser. This defaults
to the name of the effective user running
\fBinitdb\fR. It is really not important what the
superuser's name is, but one might choose to keep the
customary name \fBpostgres\fR, even if the operating
system user's name is different.
.TP
\fB-W\fR
.TP
\fB--pwprompt\fR
Makes \fBinitdb\fR prompt for a password
to give the database superuser. If you don't plan on using password
authentication, this is not important. Otherwise you won't be
able to use password authentication until you have a password
set up.
.TP
\fB--pwfile=\fIfilename\fB\fR
Makes \fBinitdb\fR read the database superuser's password
from a file. The first line of the file is taken as the password.
.PP
.PP
Other, less commonly used, parameters are also available:
.TP
\fB-d\fR
.TP
\fB--debug\fR
Print debugging output from the bootstrap backend and a few other
messages of lesser interest for the general public.
The bootstrap backend is the program \fBinitdb\fR
uses to create the catalog tables. This option generates a tremendous
amount of extremely boring output.
.TP
\fB-L \fIdirectory\fB\fR
Specifies where \fBinitdb\fR should find
its input files to initialize the database cluster. This is
normally not necessary. You will be told if you need to
specify their location explicitly.
.TP
\fB-n\fR
.TP
\fB--noclean\fR
By default, when \fBinitdb\fR
determines that an error prevented it from completely creating the database
cluster, it removes any files it might have created before discovering
that it cannot finish the job. This option inhibits tidying-up and is
thus useful for debugging.
.PP
.SH "ENVIRONMENT"
.TP
\fBPGDATA\fR
Specifies the directory where the database cluster is to be
stored; can be overridden using the \fB-D\fR option.
.PP
This utility, like most other PostgreSQL utilities,
also uses the environment variables supported by \fBlibpq\fR
(see in the documentation).
.PP
.SH "SEE ALSO"
\fBpostgres\fR(1)
