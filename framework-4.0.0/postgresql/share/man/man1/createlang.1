.\\" auto-generated by docbook2man-spec $Revision: 1.1.1.1 $
.TH "CREATELANG" "1" "2009-06-27" "Application" "PostgreSQL Client Applications"
.SH NAME
createlang \- define a new PostgreSQL procedural language

.SH SYNOPSIS
.sp
\fBcreatelang\fR [ \fB\fIconnection-option\fB\fR\fI...\fR ]  \fB\fIlangname\fB\fR [ \fB\fIdbname\fB\fR ] 

\fBcreatelang\fR [ \fB\fIconnection-option\fB\fR\fI...\fR ]  \fB [ --list ]  [ -l ] \fR \fB\fIdbname\fB\fR
.SH "DESCRIPTION"
.PP
\fBcreatelang\fR is a utility for adding a new 
programming language to a PostgreSQL database.
\fBcreatelang\fR is just a wrapper around the
CREATE LANGUAGE [\fBcreate_language\fR(7)]
command.
.SH "OPTIONS"
.PP
\fBcreatelang\fR accepts the following command-line arguments:
.TP
\fB\fIlangname\fB\fR
Specifies the name of the procedural programming language to be
defined.
.TP
\fB[-d] \fIdbname\fB\fR
.TP
\fB[--dbname] \fIdbname\fB\fR
Specifies to which database the language should be added.
The default is to use the database with the same name as the
current system user.
.TP
\fB-e\fR
.TP
\fB--echo\fR
Display SQL commands as they are executed.
.TP
\fB-l\fR
.TP
\fB--list\fR
Show a list of already installed languages in the target database.
.PP
.PP
\fBcreatelang\fR also accepts 
the following command-line arguments for connection parameters:
.TP
\fB-h \fIhost\fB\fR
.TP
\fB--host \fIhost\fB\fR
Specifies the host name of the machine on which the 
server
is running. If the value begins with a slash, it is used 
as the directory for the Unix domain socket.
.TP
\fB-p \fIport\fB\fR
.TP
\fB--port \fIport\fB\fR
Specifies the TCP port or local Unix domain socket file 
extension on which the server
is listening for connections.
.TP
\fB-U \fIusername\fB\fR
.TP
\fB--username \fIusername\fB\fR
User name to connect as.
.TP
\fB-w\fR
.TP
\fB--no-password\fR
Never issue a password prompt. If the server requires
password authentication and a password is not available by
other means such as a \fI.pgpass\fR file, the
connection attempt will fail. This option can be useful in
batch jobs and scripts where no user is present to enter a
password.
.TP
\fB-W\fR
.TP
\fB--password\fR
Force \fBcreatelang\fR to prompt for a
password before connecting to a database. 

This option is never essential, since
\fBcreatelang\fR will automatically prompt
for a password if the server demands password authentication.
However, \fBcreatelang\fR will waste a
connection attempt finding out that the server wants a password.
In some cases it is worth typing \fB-W\fR to avoid the extra
connection attempt.
.PP
.SH "ENVIRONMENT"
.TP
\fBPGDATABASE\fR
.TP
\fBPGHOST\fR
.TP
\fBPGPORT\fR
.TP
\fBPGUSER\fR
Default connection parameters
.PP
This utility, like most other PostgreSQL utilities,
also uses the environment variables supported by \fBlibpq\fR
(see in the documentation).
.PP
.SH "DIAGNOSTICS"
.PP
Most error messages are self-explanatory. If not, run
\fBcreatelang\fR with the \fB--echo\fR
option and see under the respective SQL command
for details. Also, any default connection settings and environment
variables used by the \fBlibpq\fR front-end
library will apply.
.SH "NOTES"
.PP
Use \fBdroplang\fR(1) to remove a language.
.SH "EXAMPLES"
.PP
To install the language pltcl into the database
template1:
.sp
.nf
$ \fBcreatelang pltcl template1\fR
.sp
.fi
Note that installing the language into template1
will cause it to be automatically installed into subsequently-created
databases as well.
.SH "SEE ALSO"
\fBdroplang\fR(1), CREATE LANGUAGE [\fBcreate_language\fR(7)]
