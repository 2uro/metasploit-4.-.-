.\\" auto-generated by docbook2man-spec $Revision: 1.1.1.1 $
.TH "BEGIN" "7" "2009-06-27" "SQL - Language Statements" "SQL Commands"
.SH NAME
BEGIN \- start a transaction block

.SH SYNOPSIS
.sp
.nf
BEGIN [ WORK | TRANSACTION ] [ \fItransaction_mode\fR [, ...] ]

where \fItransaction_mode\fR is one of:

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
.sp
.fi
.SH "DESCRIPTION"
.PP
\fBBEGIN\fR initiates a transaction block, that is,
all statements after a \fBBEGIN\fR command will be
executed in a single transaction until an explicit COMMIT [\fBcommit\fR(7)] or ROLLBACK [\fBrollback\fR(7)] is given.
By default (without \fBBEGIN\fR),
PostgreSQL executes
transactions in ``autocommit'' mode, that is, each
statement is executed in its own transaction and a commit is
implicitly performed at the end of the statement (if execution was
successful, otherwise a rollback is done).
.PP
Statements are executed more quickly in a transaction block, because
transaction start/commit requires significant CPU and disk
activity. Execution of multiple statements inside a transaction is
also useful to ensure consistency when making several related changes:
other sessions will be unable to see the intermediate states
wherein not all the related updates have been done.
.PP
If the isolation level or read/write mode is specified, the new
transaction has those characteristics, as if
SET TRANSACTION [\fBset_transaction\fR(7)] 
was executed.
.SH "PARAMETERS"
.TP
\fBWORK\fR
.TP
\fBTRANSACTION\fR
Optional key words. They have no effect.
.PP
Refer to SET TRANSACTION [\fBset_transaction\fR(7)] for information on the meaning
of the other parameters to this statement.
.PP
.SH "NOTES"
.PP
START TRANSACTION [\fBstart_transaction\fR(7)] has the same functionality
as \fBBEGIN\fR.
.PP
Use COMMIT [\fBcommit\fR(7)] or
ROLLBACK [\fBrollback\fR(7)]
to terminate a transaction block.
.PP
Issuing \fBBEGIN\fR when already inside a transaction block will
provoke a warning message. The state of the transaction is not affected.
To nest transactions within a transaction block, use savepoints 
(see SAVEPOINT [\fBsavepoint\fR(7)]).
.PP
For reasons of backwards compatibility, the commas between successive
\fItransaction_modes\fR can be
omitted.
.SH "EXAMPLES"
.PP
To begin a transaction block:
.sp
.nf
BEGIN;
.sp
.fi
.SH "COMPATIBILITY"
.PP
\fBBEGIN\fR is a PostgreSQL
language extension. It is equivalent to the SQL-standard command
START TRANSACTION [\fBstart_transaction\fR(7)], whose reference page
contains additional compatibility information.
.PP
Incidentally, the BEGIN key word is used for a
different purpose in embedded SQL. You are advised to be careful
about the transaction semantics when porting database applications.
.SH "SEE ALSO"
COMMIT [\fBcommit\fR(7)], ROLLBACK [\fBrollback\fR(7)], START TRANSACTION [\fBstart_transaction\fR(7)], SAVEPOINT [\fBsavepoint\fR(7)]
