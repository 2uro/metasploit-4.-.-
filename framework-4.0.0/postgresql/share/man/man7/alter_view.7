.\\" auto-generated by docbook2man-spec $Revision: 1.1.1.1 $
.TH "ALTER VIEW" "7" "2009-06-27" "SQL - Language Statements" "SQL Commands"
.SH NAME
ALTER VIEW \- change the definition of a view

.SH SYNOPSIS
.sp
.nf
ALTER VIEW \fIname\fR ALTER [ COLUMN ] \fIcolumn\fR SET DEFAULT \fIexpression\fR
ALTER VIEW \fIname\fR ALTER [ COLUMN ] \fIcolumn\fR DROP DEFAULT
ALTER VIEW \fIname\fR OWNER TO \fInew_owner\fR
ALTER VIEW \fIname\fR RENAME TO \fInew_name\fR
ALTER VIEW \fIname\fR SET SCHEMA \fInew_schema\fR
.sp
.fi
.SH "DESCRIPTION"
.PP
\fBALTER VIEW\fR changes various auxiliary properties
of a view. (If you want to modify the view's defining query,
use \fBCREATE OR REPLACE VIEW\fR.)
.PP
You must own the view to use \fBALTER VIEW\fR.
To change a view's schema, you must also have CREATE
privilege on the new schema.
To alter the owner, you must also be a direct or indirect member of the new
owning role, and that role must have CREATE privilege on
the view's schema. (These restrictions enforce that altering the owner
doesn't do anything you couldn't do by dropping and recreating the view.
However, a superuser can alter ownership of any view anyway.)
.SH "PARAMETERS"
.TP
\fB\fIname\fB\fR
The name (optionally schema-qualified) of an existing view.
.TP
\fBSET/DROP DEFAULT\fR
These forms set or remove the default value for a column.
A default value associated with a view column is
inserted into \fBINSERT\fR statements on the view before
the view's ON INSERT rule is applied, if
the \fBINSERT\fR does not specify a value for the column.
.TP
\fB\fInew_owner\fB\fR
The user name of the new owner of the view.
.TP
\fB\fInew_name\fB\fR
The new name for the view.
.TP
\fB\fInew_schema\fB\fR
The new schema for the view.
.SH "NOTES"
.PP
For historical reasons, \fBALTER TABLE\fR can be used with
views too; but the only variants of \fBALTER TABLE\fR
that are allowed with views are equivalent to the ones shown above.
.SH "EXAMPLES"
.PP
To rename the view foo to
bar:
.sp
.nf
ALTER VIEW foo RENAME TO bar;
.sp
.fi
.SH "COMPATIBILITY"
.PP
\fBALTER VIEW\fR is a PostgreSQL
extension of the SQL standard.
.SH "SEE ALSO"
CREATE VIEW [\fBcreate_view\fR(7)], DROP VIEW [\fBdrop_view\fR(7)]
